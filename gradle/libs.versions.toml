[versions]
accompanist = "0.30.1"
androidGradlePlugin = "8.1.1"
androidxActivityKtx = "1.7.2"
androidxAppCompat = "1.6.1"
androidxCompose = "1.5.1"
androidxComposeActivity = "1.7.2"
androidxComposeCompiler = "1.5.3"
androidxCoreKtx = "1.12.0"
androidxLifecycle = "2.6.2"
androidxTestCore = "1.5.0"
androidxTestRunner = "1.5.2"
com-squareup-okhttp3 = "4.11.0"
com-squareup-retrofit2 = "2.9.0"
decompose = "1.0.0-alpha-01"
firebaseBom = "32.2.3"
fontAwesome = "5.15.2"
googleServices = "4.3.15"
#gradle = "8.1.1"
gradleVersionsPlugin = "0.42.0"
jqueryKotlin = "1.0.0"
kermit = "1.2.2"
kotlin = "1.9.10"
kotlinCoroutines = "1.7.3"
kotlinterGradle = "3.4.5"
kotlinReflect = "1.9.10"
kotlinStdlibJdk8 = "1.9.10"
kotlinWrappers = "1.0.0-pre.343"
kotlinxCoroutinesReactive = "1.7.3"
ksp = "1.9.10-1.0.13"
ktor = "2.3.4"
perfPlugin = "1.4.2"
shadowPlugin = "8.1.1"
sqlDelight = "2.0.0"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
androidx-activity-activityKtx = { module = "androidx.activity:activity-ktx", version.ref = "androidxActivityKtx" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppCompat" }
androidx-compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidxComposeActivity" }
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "androidxCompose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidxCompose" }
androidx-compose-material3 = "androidx.compose.material3:material3:1.1.1"
androidx-compose-runtime = "androidx.compose.runtime:runtime:1.5.1"
androidx-compose-ui = "androidx.compose.ui:ui:1.5.1"
androidx-compose-ui-tooling = "androidx.compose.ui:ui-tooling:1.5.1"
androidx-compose-ui-tooling-preview = "androidx.compose.ui:ui-tooling-preview:1.5.1"
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidxCoreKtx" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-auth = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-database = { module = "com.google.firebase:firebase-database-ktx" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-perf = { module = "com.google.firebase:firebase-perf-ktx" }
font-awesome = { module = "org.webjars:font-awesome", version.ref = "fontAwesome" }
google-gson = "com.google.code.gson:gson:2.10.1"
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
jquery-kotlin = { module = "io.kvision:jquery-kotlin", version.ref = "jqueryKotlin" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutinesPlayServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinCoroutines" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlinStdlibJdk8" }
kotlin-wrappers-bom = { module = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom", version.ref = "kotlinWrappers" }
kotlin-wrappers-emotion = { module = "org.jetbrains.kotlin-wrappers:kotlin-emotion", version.ref = "kotlinWrappers" }
kotlin-wrappers-extensions = { module = "org.jetbrains.kotlin-wrappers:kotlin-extensions", version.ref = "kotlinWrappers" }
kotlin-wrappers-js = { module = "org.jetbrains.kotlin-wrappers:kotlin-js", version.ref = "kotlinWrappers" }
kotlin-wrappers-mui = { module = "org.jetbrains.kotlin-wrappers:kotlin-mui", version.ref = "kotlinWrappers" }
kotlin-wrappers-node = { module = "org.jetbrains.kotlin-wrappers:kotlin-node", version.ref = "kotlinWrappers" }
kotlin-wrappers-react = { module = "org.jetbrains.kotlin-wrappers:kotlin-react", version.ref = "kotlinWrappers" }
kotlin-wrappers-reactDom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom", version.ref = "kotlinWrappers" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinxCoroutinesReactive" }
kotlinx-html = "org.jetbrains.kotlinx:kotlinx-html-js:0.8.0"
kotlinx-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1"
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-json = { group = "io.ktor", name = "ktor-client-json", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor-client-ios = { group = "io.ktor", name = "ktor-client-ios", version.ref = "ktor" }
ktor-client-java = { group = "io.ktor", name = "ktor-client-java", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
perf-plugin = { module = "com.google.firebase:perf-plugin", version.ref = "perfPlugin" }
square-okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "com-squareup-okhttp3" }
square-okhttp3-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "com-squareup-okhttp3" }
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "com-squareup-retrofit2" }
square-retrofit-converterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "com-squareup-retrofit2" }
timber = "com.jakewharton.timber:timber:5.0.1"
androidx-camera-core = { group = "androidx.camera", name = "camera-core", version = "1.2.3" }

#multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
#multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }

#[bundles]
#multiplatformSettings = ["multiplatform-settings", "multiplatform-settings-coroutines"]
# ktor-common = ["ktor-client-core", "ktor-client-json", "ktor-client-logging", "ktor-client-serialization", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json"]

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
gradleVersionsPlugin = { id = "com.github.ben-manes.versions", version.ref  = "gradleVersionsPlugin" }
shadowPlugin = { id = "com.github.johnrengelman.shadow", version.ref = "shadowPlugin" }
kotlinterGradle = { id = "org.jmailen.gradle:kotlinter-gradle", version.ref = "kotlinterGradle" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
